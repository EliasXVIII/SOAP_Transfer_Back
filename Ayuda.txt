- Programas necesarios y recomendados 

- Programas necesarios 

- Programas adicionales recomendados 

- Descripción del software 

- Descripción general 

- Arquitectura/jerarquía del programa 

- Guía básica de uso 

- Consideraciones adicionales 

- Tecnologías utilizadas 

- Descripción de las tecnologías y justificación 

- Tecnologías descartadas y justificación 

Nombre del Software: Servicio de Archivo Seguro

Descripción General: Este software proporciona un servicio para la carga y descarga de archivos con encriptación y des-encriptación utilizando el estándar SOAP. Los archivos se almacenan de manera segura en el servidor utilizando el cifrado AES-256. La aplicación permite a los usuarios subir y bajar archivos de manera segura, asegurando que los datos en tránsito y en reposo estén protegidos.

Arquitectura/Jerarquía del Programa
FileService.cs:

Implementa la lógica de negocio para cargar y descargar archivos.
Utiliza cifrado AES-256 para proteger los archivos antes de almacenarlos y para descifrarlos cuando se descargan.
IFileService.cs:

Define las operaciones disponibles en el servicio SOAP, como UploadFileAsync y DownloadFileAsync.
Program.cs:

Configura y arranca la aplicación, incluyendo la configuración del servicio SOAP y la política de CORS.
FileEncryptionService.csproj:

Archivo de proyecto que define las dependencias y configuraciones del proyecto .NET.
Guía Básica de Uso
Subir un Archivo:

Llama al método UploadFileAsync proporcionando un archivo en formato byte y un nombre de archivo. El archivo será cifrado y almacenado en el servidor.
Descargar un Archivo:

Llama al método DownloadFileAsync proporcionando el nombre del archivo. El archivo será descifrado y devuelto al cliente.
Consideraciones Adicionales
Manejo de Errores: Asegúrate de manejar errores y excepciones adecuadamente para evitar que información sensible sea revelada en mensajes de error.
Seguridad: La clave de cifrado debe ser gestionada de forma segura y no debe estar codificada directamente en el código. Considera usar un administrador de secretos o una solución similar.
Escalabilidad: Si se espera una alta carga de archivos, considera una solución de almacenamiento más robusta o distribuida.
Tecnologías Utilizadas
.NET 8.0: Framework de desarrollo para la construcción de aplicaciones web y servicios.
ASP.NET Core: Plataforma para construir aplicaciones web y servicios en la nube.
SoapCore: Biblioteca para crear y consumir servicios SOAP en ASP.NET Core.
AES-256: Algoritmo de cifrado utilizado para proteger los archivos.
Descripción de las Tecnologías y Justificación
.NET 8.0: La última versión estable de .NET proporciona mejoras en el rendimiento y nuevas características para el desarrollo de aplicaciones.
ASP.NET Core: Permite la creación de servicios web robustos y escalables. Ofrece soporte nativo para la construcción de aplicaciones SOAP.
SoapCore: Una solución moderna para implementar y consumir servicios SOAP en aplicaciones ASP.NET Core. Es compatible con las especificaciones de SOAP y permite el uso de la serialización de datos.
AES-256: Un estándar de cifrado muy seguro que protege los datos con una clave de 256 bits, asegurando que los archivos estén protegidos contra accesos no autorizados.
Tecnologías Descartadas y Justificación
WCF (Windows Communication Foundation): Aunque WCF es una opción robusta para servicios SOAP en aplicaciones .NET, se ha optado por SoapCore para una integración más sencilla y moderna en aplicaciones ASP.NET Core.
Otros algoritmos de cifrado (como DES o 3DES): Se descartaron debido a su menor nivel de seguridad en comparación con AES-256, que es el estándar recomendado para cifrado de datos.
Programas Necesarios y Recomendados
Programas Necesarios:

Visual Studio o Visual Studio Code: Para el desarrollo del proyecto .NET.
.NET SDK 8.0: Necesario para compilar y ejecutar la aplicación.
Un servidor web: Para desplegar la aplicación, como IIS, Kestrel (integrado en .NET Core), o nginx si se utiliza en un entorno Linux.
Programas Adicionales Recomendados:

Postman: Para probar las llamadas al servicio SOAP.
Herramientas de monitoreo: Para vigilar el rendimiento y el estado de la aplicación en producción.
Herramientas de gestión de secretos: Para manejar de manera segura las claves de cifrado.